plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        minSdkVersion versions.minSdk

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
        // We run a full lint analysis as build part in CI, so skip vital checks for assemble tasks.
        checkReleaseBuilds false
    }

    // TODO replace with https://issuetracker.google.com/issues/72050365 once released.
    libraryVariants.all {
        it.generateBuildConfig.enabled = false
    }
}

dependencies {
    implementation deps.kotlin.runtime
    api project(':butterknife-annotations-kotlin')
    api deps.androidx.core

    implementation project(':butterknife-lint-kotlin')

    androidTestImplementation deps.junit
    androidTestImplementation deps.truth
    androidTestImplementation deps.androidx.test.runner
    androidTestAnnotationProcessor project(':butterknife-compiler')

    testImplementation deps.junit
    testImplementation deps.truth
    testImplementation deps.compiletesting
    testImplementation files(getRuntimeJar())
//    testImplementation files(org.gradle.internal.jvm.Jvm.current().getToolsJar())
    testImplementation project(':butterknife-compiler-kotlin')
    testImplementation deps.androidx.annotations
}

def getRuntimeJar() {
    try {
        final File javaBase = new File(System.getProperty("java.home")).getCanonicalFile();
        File runtimeJar = new File(javaBase, "lib/rt.jar");
        if (runtimeJar.exists()) {
            return runtimeJar;
        }
        runtimeJar = new File(javaBase, "jre/lib/rt.jar");
        return runtimeJar.exists() ? runtimeJar : null;
    } catch (IOException e) {
        throw new RuntimeException(e);
    }
}

//apply from: rootProject.file('gradle/gradle-mvn-push.gradle')